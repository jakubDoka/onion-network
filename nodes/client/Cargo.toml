[package]
repository = { workspace = true }
license = { workspace = true }
readme = { workspace = true }
categories = { workspace = true }
keywords = { workspace = true }
name = "client"
version = "0.1.0"
edition = { workspace = true }
description = "minimal frontend for the chat application"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = { workspace = true }
argon2 = { version = "0.5.2", default-features = false, features = ["alloc"] }
console_error_panic_hook = "0.1.7"
console_log = { version = "1.0.0", features = ["wasm-bindgen"] }
hex = "0.4.3"
leptos = { version = "0.6.6", default-features = false, features = ["nightly", "csr"] }
leptos_router = { version = "0.6.6", features = ["nightly", "csr"] }
libp2p = { workspace = true, features = ["noise", "macros", "yamux", "wasm-bindgen"] }
log = { workspace = true }
rand = "0.8.5"
serde = { version = "1.0.193", features = ["derive"] }
serde_json = "1.0.108"
thiserror = "1.0.50"
wasm-bindgen-futures = "0.4.38"

websocket-websys = { workspace = true }
dht = { workspace = true }
onion = { workspace = true }
crypto = { workspace = true }
chat-spec = { workspace = true }
component-utils = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies.chain-api]
version = "0.1.0"
path = "../../core/chain-api"
features = ["native"]
default-features = false 

[target.'cfg(target_arch = "wasm32")'.dependencies.chain-api]
version = "0.1.0"
path = "../../core/chain-api"
features = ["web"]
default-features = false 


[dependencies.web-sys]
version = "0.3.65"
features = [
  "Document",
  "Window",
  "console",
  "Event",
  "FileReader",
  "File",
  "FileList",
  "HtmlInputElement",
  "BlobPropertyBag",
  "Storage",]

[features]
building = []

[lints]
workspace = true
